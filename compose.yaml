version: '3.9'

services:
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest # ghcr.io/linuxserver/duckdns
    container_name: duckdns
    network_mode: host
    environment:
      - SUBDOMAINS=engsep
      - TOKEN=c2b414eb-7d11-44c7-ad23-0547a2de4bb0 # https://www.duckdns.org/domains (engsep@github)
      - UPDATE_IP=both
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nslookup engsep.duckdns.org || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    ports:
      - "1880:1880"
    volumes:
      - ./data:/data
    entrypoint: ["/bin/bash", "-c", "cd /data; chown -R 1000:1000 .; npm install --unsafe-perm --no-update-notifier --no-fund --only=production; cd /usr/src/node-red; ./entrypoint.sh"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:1880 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./docs:/usr/share/nginx/html/dedalus-ontology
    entrypoint: ["/bin/sh", "-c", "/docker-entrypoint.sh nginx & while true; do sleep 60d; nginx -s reload; done"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: ["/bin/sh", "-c", "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "find /etc/letsencrypt/live -type d -empty -exec false {} +"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    command: ["-H", "unix:///var/run/docker.sock"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=3 --spider http://127.0.0.1:9000/api/system/status || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  nodered_data:
  portainer_data:
